- name: shipping server
  hosts: shipping
  become: yes
  tasks:
  - name: install maven
    ansible.builtin.package:
      name: maven
      state: present

  - name: add user
    ansible.builtin.user:
      name: roboshop  

  - name: Recursively remove directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: Create a directory for app
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp/shipping.zip

  - name: unzip
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service


  - name: Daemon Reload and start
    ansible.builtin.systemd_service:
      daemon_reload: true

  # - name: check cities schema exist or not
  #   ansible.builtin.command: mysql -h mysql.littlesimba.online -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
  #   register: schema

  # - name: print output
  #   ansible.builtin.debug:
  #     msg: "schema output: {{schema}}"

  # - name: load cities data
  #   ansible.builtin.command: mysql -h mysql.littlesimba.online -uroot -p{{mysql_password}} < /app/schema/shipping.sql 
  #   when: schema.stdout !="1"
    
  - name: start and enable shipping
    ansible.builtin.package:
      name: shipping
      state: restarted
      enabled: yes
